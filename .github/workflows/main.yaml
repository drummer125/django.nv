name: Django # workflow name

on:
  push:
    branches: # similar to "only" in GitLab
      - main

jobs:
  build:
    runs-on: ubuntu-20.04 # similar to "image" in GitLab
    steps:
      - uses: actions/checkout@v2 # similar to "image" in GitLab
      
      - name: Setup python
        uses: actions/setup-python@v2
        with:
          python-version: '3.6'

      - run: |
          pip3 install --upgrade virtualenv
          virtualenv env
          source env/bin/activate
          pip install -r requirements.txt
          python manage.py check
  
  test:
    runs-on: ubuntu-20.04
    needs: build
    steps:
      - uses: actions/checkout@v2

      - name: Setup python
        uses: actions/setup-python@v2
        with:
          python-version: '3.6'

      - run: |
          pip3 install --upgrade virtualenv
          virtualenv env
          source env/bin/activate
          pip install -r requirements.txt
          python manage.py test taskManager
  
  sca:
    runs-on: ubuntu-20.04
    needs: test
    steps:
      - uses: actions/checkout@v2
      
      - run: docker run --rm -v $(pwd):/src hysnsec/safety check -r requirements.txt --json | tee sca-results.json
        continue-on-error: true
      
      - uses: actions/upload-artifact@v2
        with:
          name: Safety
          path: oast-results.json
        if: always()

  
  secret_scanning:
    runs-on: ubuntu-20.04
    needs: sca
    steps:
      - uses: actions/checkout@v2
      
      - run: docker run --rm -v $(pwd):/src hysnsec/trufflehog file:///src --json > trufflehog-output.json
        continue-on-error: true
      
      - uses: actions/upload-artifact@v2
        with:
          name: TruffleHog
          path: trufflehog-output.json
        if: always()

  sast:
    runs-on: ubuntu-20.04
    needs: secret_scanning
    steps:
      - uses: actions/checkout@v2

      - run: docker run --rm -v $(pwd):/src hysnsec/bandit -r /src -f json -o /src/bandit-output.json
        continue-on-error: true


      - uses: actions/upload-artifact@v2
        with:
          name: Bandit
          path: bandit-output.json
        if: always()

  zap_baseline:
    runs-on: ubuntu-20.04
    needs: sast
    steps:
      - run: |
          docker pull owasp/zap2docker-stable:2.10.0
          docker run --user root --rm -v $(pwd):/zap/wrk:rw -w /zap owasp/zap2docker-stable:2.10.0 zap-baseline.py -t ${{ secrets.PROD_URL }} -J zap-output.json
      
      - uses: actions/upload-artifact@v2
        with:
          name: ZAP Scan
          path: zap-output.json
        if: always()

  integration:
    runs-on: ubuntu-20.04
    needs: sca
    steps:
      - run: echo "This is an integration step"
      - run: exit 1
        continue-on-error: true
  
  prod:
    runs-on: ubuntu-20.04
    needs: integration
    steps:
      - run: echo "This is a deploy step."
